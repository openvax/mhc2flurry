# Just print a JSON PDB query to stdout
# Doing this in a python script so we have comments.

import json

sequences = []

# DRA1*01:01
sequences.append(
  "MAISGVPVLGFFIIAVLMSAQESWAIKEEHVIIQAEFYLNPDQSGEFMFDFDGDEIFHVDMAKKETVWRLEEFGRF"
  "ASFEAQGALANIAVDKANLEIMTKRSNYTPITNVPPEVTVLTNSPVELREPNVLICFIDKFTPPVVNVTWLRNGKP"
  "VTTGVSETVFLPREDHLFRKFHYLPFLPSTEDVYDCRVEHWGLDEPLLKHWEFDAPSPLPETTENVVCALGLTVGL"
  "VGIIIGTIFIIKGVRKSNAAERRGPL")

# DRB1*01:01
sequences.append(
  "MVCLKLPGGSCMTALTVTLMVLSSPLALAGDTRPRFLWQLKFECHFFNGTERVRLLERCIYNQEESVRFDSDVGEY"
  "RAVTELGRPDAEYWNSQKDLLEQRRAAVDTYCRHNYGVGESFTVQRRVEPKVTVYPSKTQPLQHHNLLVCSVSGFY"
  "PGSIEVRWFRNGQEEKAGVVSTGLIQNGDWTFQTLVMLETVPRSGEVYTCQVEHPSVTSPLTVEWRARSESAQSKM"
  "LSGVGGFVLGLLFLGAGLFIYFRNQKGHSGLQPTGFLS")

# DRB3*01:01
sequences.append(
  "MVCLKLPGGSSLAALTVTLMVLSSRLAFAGDTRPRFLELRKSECHFFNGTERVRYLDRYFHNQEEFLRFDSDVGEY"
  "RAVTELGRPVAESWNSQKDLLEQKRGRVDNYCRHNYGVGESFTVQRRVHPQVTVYPAKTQPLQHHNLLVCSVSGFY"
  "PGSIEVRWFRNGQEEKAGVVSTGLIQNGDWTFQTLVMLETVPRSGEVYTCQVEHPSVTSALTVEWRARSESAQSKM"
  "LSGVGGFVLGLLFLGAGLFIYFRNQKGHSGLQPTGFLS")

# DRB4*01:01
sequences.append(
  "MVCLKLPGGSCMAALTVTLTVLSSPLALAGDTQPRFLEQAKCECHFLNGTERVWNLIRYI"
  "YNQEEYARYNSDLGEYQAVTELGRPDAEYWNSQKDLLERRRAEVDTYCRYNYGVVESFTV"
  "QRRVQPKVTVYPSKTQPLQHHNLLVCSVNGFYPGSIEVRWFRNSQEEKAGVVSTGLIQNG"
  "DWTFQTLVMLETVPRSGEVYTCQVEHPSMMSPLTVQWSARSESAQSKMLSGVGGFVLGLL"
  "FLGTGLFIYFRNQKGHSGLQPTGLLS")

# DRB5*01:01
sequences.append(
  "MVCLKLPGGSYMAKLTVTLMVLSSPLALAGDTRPRFLQQDKYECHFFNGTERVRFLHRDIYNQEEDLRFDSDVGEY"
  "RAVTELGRPDAEYWNSQKDFLEDRRAAVDTYCRHNYGVGESFTVQRRVEPKVTVYPARTQTLQHHNLLVCSVNGFY"
  "PGSIEVRWFRNSQEEKAGVVSTGLIQNGDWTFQTLVMLETVPRSGEVYTCQVEHPSVTSPLTVEWRAQSESAQSKM"
  "LSGVGGFVLGLLFLGAGLFIYFKNQKGHSGLHPTGLVS")

# HLA-DQB1*02:01
sequences.append(
  "MSWKKALRIPGGLRAATVTLMLSMLSTPVAEGRDSPEDFVYQFKGMCYFTNGTERVRLVS"
  "RSIYNREEIVRFDSDVGEFRAVTLLGLPAAEYWNSQKDILERKRAAVDRVCRHNYQLELR"
  "TTLQRRVEPTVTISPSRTEALNHHNLLVCSVTDFYPAQIKVRWFRNDQEETAGVVSTPLI"
  "RNGDWTFQILVMLEMTPQRGDVYTCHVEHPSLQSPITVEWRAQSESAQSKMLSGIGGFVL"
  "GLIFLGLGLIIHHRSQKGLLH")

# HLA-DPB1*01:01
sequences.append(
  "MMVLQVSAAPRTVALTALLMVLLTSVVQGRATPENYVYQGRQECYAFNGTQRFLERYIYN"
  "REEYARFDSDVGEFRAVTELGRPAAEYWNSQKDILEEKRAVPDRVCRHNYELDEAVTLQR"
  "RVQPKVNVSPSKKGPLQHHNLLVCHVTDFYPGSIQVRWFLNGQEETAGVVSTNLIRNGDW"
  "TFQILVMLEMTPQQGDVYICQVEHTSLDSPVTVEWKAQSDSAQSKTLTGAGGFVLGLIIC"
  "GVGIFMHRRSKKVQRGSA")

# Should be distinct
assert len(sequences) == len(set(sequences))


def node_from_sequence(sequence):
  return {
    "type": "terminal",
    "service": "sequence",
    "parameters": {
      "evalue_cutoff": 10,
      "identity_cutoff": 0.5,
      "target": "pdb_protein_sequence",
      "value": sequence,
    }
  }


query = {
  "query": {
    "type": "group",
    "logical_operator": "or",
    "nodes": [node_from_sequence(sequence) for sequence in sequences],
  },
  "request_options": {
    "return_all_hits": True
  },
  "return_type": "entry"
}

print(json.dumps(query))